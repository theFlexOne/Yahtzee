continue
game_record.turns.first.rolls.first.dice.first.isFree
game_record.turns.first.rolls.first.dice.first.value
game_record.turns
continue
game_record.turns
game_record.turns.first
game_record.turns.first.rolls.first.dice.first.value
game_record
continue
game_record
continue
params
continue
params.except :action
params.ignore
paramsignore
params[:game_record]
params.to_s
params.to_hash
params.methods
params.entries
params.values
params.size
params.count
params.all
params.select
params.select :action
continue
params.keys
params.each
params.each do |p|
params.fetch
params[:parameters]
params.parameters
params.methods
params.to_h
params.to_k
params.to_keys
params.pluck
continue
params
continue
params[:turns]
params[:players]
params[:uuid]
params
continue
game_record.turns.first
game_record.turns
game_record
continue
game_record.turns
game_record
continue
params.methods
params
continue
gameRecord.turns.first.methods
gameRecord.turns.first.rolls
gameRecord.turns.first.roll
gameRecord.turns.first
gameRecord.turns.first.rolls
gameRecord.turns
gameRecord
continue
params[:turns].first[:rolls]
params[:turns].first
params[:turns].first.rolls
params[:turns].rolls
params[:turns][:rolls]
params
continue
params.keys
params.to_h
params.methods
params
continue
params["_json"].first
params["_json"].size
params["_json"].class
params["_json"]
params["game_record"]
params.keys
params.methods
p params
params.first
params.length
params.size
params.class
params
continue
session
